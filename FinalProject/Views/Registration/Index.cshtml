@model FinalProject.Models.UserClass

@{
    ViewBag.Title = "Register";
}

<section class="bg-image" style="background-image: url('/images/background1.jpg'); background-size: cover">
    <div class="mask d-flex align-items-center gradient-custom-3">
        <div class="container">
            <div class="row d-flex justify-content-center align-items-center">
                <div class="col-12 col-md-9 col-lg-7 col-xl-6">
                    <div class="card" style="border-radius: 30px; margin: 20px 20px 20px 20px">
                        <div class="card-body p-5">
                            <h2 class="text-uppercase text-center mb-2">Create an account</h2>

                            @using (Html.BeginForm("Index", "Registration", FormMethod.Post, new { enctype = "multipart/form-data" }))
                            {
                                @Html.AntiForgeryToken()
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="input-group">
                                    <div class="form-outline mb-6">
                                        @Html.LabelFor(model => model.Uname)

                                        @Html.EditorFor(model => model.Uname, new { htmlAttributes = new { @class = "form-control form-control-lg", required = "required", pattern = "^[a-zA-Z]*$", autofocus = "autofocus" } })
                                        <div class="valid-feedback">Looks Good!!</div>
                                        <div class="invalid-feedback">Please Enter Username [Alphabets only].</div>
                                        @Html.ValidationMessageFor(model => model.Uname, "", new { @class = "text-danger" })

                                    </div>
                                    <div class="form-outline mb-6" style="margin-left:10px">
                                        @Html.LabelFor(model => model.Uemail)
                                        <input type="email" name="Uemail" class = "form-control form-control-lg" required />
                                        @*@Html.EditorFor(model => model.Uemail, new { htmlAttributes = new { @class = "form-control form-control-lg", required = "required", pattern = "[a-z0-9._%+-]+@[a-z0-9.-]+/.[a-z]{2,4}$" } })*@
                                        @Html.ValidationMessageFor(model => model.Uemail, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="input-group">
                                    <div class="form-outline mb-6">
                                        @Html.LabelFor(model => model.Upwd)

                                        @Html.EditorFor(model => model.Upwd, new { htmlAttributes = new { @class = "form-control form-control-lg", required = "required" } })
                                        @Html.ValidationMessageFor(model => model.Upwd, "", new { @class = "text-danger" })

                                    </div>
                                    <div class="form-outline mb-6" style="margin-left:10px">
                                        @Html.LabelFor(model => model.Repwd)

                                        @Html.EditorFor(model => model.Repwd, new { htmlAttributes = new { @class = "form-control form-control-lg", required = "required" } })
                                        @Html.ValidationMessageFor(model => model.Repwd, "", new { @class = "text-danger" })

                                    </div>
                                </div>

                                <div class="input-group">
                                    <div class="form-outline mb-6">
                                        @Html.LabelFor(model => model.Mobile)
                                        @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control form-control-lg", required = "required", pattern = "[789][0-9]{9}" } })
                                        @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })

                                    </div>
                                  @*  <div class="form-outline mb-6" style="margin-left:10px">
                                        @Html.LabelFor(model => model.Education)
                                        @Html.EditorFor(model => model.Education, new { htmlAttributes = new { @class = "form-control form-control-lg", required = "required" } })
                                        @Html.ValidationMessageFor(model => model.Education, "", new { @class = "text-danger" })
                                    </div> *@
                                    
                                </div>

                                @*<div class="form-outline mb-6">
                                    @Html.LabelFor(model => model.Address)
                                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control form-control-lg", required = "required" } })
                                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                </div>*@

                                <div class="form-outline mb-6" style="margin-top:12px">
                                    @Html.LabelFor(model => model.Uimg)
                                    <input type="file" name="file" />
                                    @Html.ValidationMessageFor(model => model.Uimg, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-check" style="margin-bottom:15px;margin-top:9px;">
                                    <input class="form-check-input me-2" type="checkbox" value="" id="form2Example3cg" required />
                                    <label class="form-check-label" for="form2Example3g">
                                        I agree all statements in <a href="#!" class="text-body"><u>Terms of service</u></a>
                                    </label>
                                </div>

                                <div class="d-flex" style="justify-content:space-between">
                                    <input type="submit" class="btn btn-primary" style="width:80px; height:40px" value="Register" />
                                    <p class="text-center text-muted" style="margin-top:7px;">Have already an account? <a href="/login/index" class="fw-bold text-body">Login Here!</a></p>
                                    <a href="/Home/index"><input type="button" class="btn btn-danger" style="width:80px; height:40px" value="Cancel" /></a>
                                </div>




                                //  @Html.ViewData["Message"]

                            }
                            @{
                                var message = ViewBag.SuccessMsg;
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<script type="text/javascript">
    var message = '@message';
    if(message){
        alert(message);
    }
</script>